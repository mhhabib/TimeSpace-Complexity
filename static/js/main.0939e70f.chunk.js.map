{"version":3,"sources":["pages/Home.js","pages/DataStructures.js","pages/Algorithms.js","pages/Index.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Container","text","className","Header","as","class","Component","DataStructures","Table","celled","selectable","structured","color","Row","HeaderCell","rowSpan","colSpan","Body","datastructures","map","ds","Cell","name","positive","t_best","t_avg","negative","t_worst","s_best","s_avg","s_worst","id","Algorithms","algorithms","algo","Index","state","activeItem","handleItemClick","e","setState","this","Icon","href","target","rel","Grid","Column","width","Menu","fluid","vertical","tabular","Item","active","onClick","Link","to","stretched","Segment","path","exact","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0939e70f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Container, Header} from 'semantic-ui-react';\r\n\r\n\r\n\r\nclass Home extends Component{\r\n  \r\n    render() {\r\n      \r\n      return (\r\n        <>\r\n            <Container text className=\"main\">        \r\n              <Header as='h2'>Complexity Analysis</Header>\r\n              <div class=\"ui divider\"></div>\r\n              <p>\r\n                Time complexity of an algorithm quantifies the amount of time taken by an algorithm to run as a function of the length of the input. Similarly, \r\n                Space complexity of an algorithm quantifies the amount of space or memory taken by an algorithm to run as a function of the length of the input.\r\n              </p>\r\n              <p>\r\n                All the mathemetical Notations are: \r\n                <ul>\r\n                  <li>\r\n                   <b><em> Big O (O())</em></b> describes the upper bound of the complexity.\r\n                  </li>\r\n                  <li>\r\n                  <b><em> Omega (Ω())</em></b> describes the lower bound of the complexity.\r\n                  </li>\r\n                  <li>\r\n                  <b><em> Theta (Θ())</em></b> describes the exact bound of the complexity.\r\n                  </li>\r\n                  <li>\r\n                  <b><em> Little O (o())</em></b> describes the upper bound excluding the exact bound.\r\n                  </li>\r\n                </ul>\r\n              </p>\r\n              <p><b>So,</b> far creating this repository aims to provide all the time and space complexity of Data Structures and algorithms under the same roof.\r\n              Keep eye on the table to brush up the prior known terms on before the night of interview or any other programming examinations.</p>\r\n\r\n              <p><b><i>Best of luck for the upcomming war!</i></b></p>\r\n            </Container>\r\n            \r\n        </>\r\n      )\r\n    }\r\n}\r\nexport default Home","import React,{Component} from \"react\";\r\nimport { Container, Table} from 'semantic-ui-react';\r\nimport datastructures from '../data/datastructures.json';\r\n\r\nclass DataStructures extends Component{\r\n  render() {\r\n    return (\r\n      <>\r\n      <Container className=\"main\">\r\n        <p>a specialized format for organizing, processing, retrieving and storing data. There are several basic and advanced types of data structures, all designed to arrange data to suit a specific purpose. </p>\r\n      <Table celled selectable structured color='yellow' key='yellow'>\r\n        <Table.Header>\r\n            <Table.Row>\r\n                <Table.HeaderCell rowSpan='2'>Name</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='3'>Time Complexity</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='3'>Space Complexity</Table.HeaderCell>\r\n            </Table.Row>\r\n            <Table.Row>\r\n                <Table.HeaderCell>Best</Table.HeaderCell>\r\n                <Table.HeaderCell>Average</Table.HeaderCell>\r\n                <Table.HeaderCell>Worst</Table.HeaderCell>\r\n                <Table.HeaderCell>Best</Table.HeaderCell>\r\n                <Table.HeaderCell>Average</Table.HeaderCell>\r\n                <Table.HeaderCell>Worst</Table.HeaderCell>\r\n            </Table.Row>\r\n        </Table.Header>\r\n\r\n          <Table.Body>\r\n          {datastructures.map(ds => {\r\n              return (\r\n                <Table.Row key={ds.id}>\r\n                  <Table.Cell >{ds.name}</Table.Cell>\r\n                  <Table.Cell positive>{ds.t_best}</Table.Cell>\r\n                  <Table.Cell >{ds.t_avg}</Table.Cell>\r\n                  <Table.Cell negative>{ds.t_worst}</Table.Cell>\r\n                  <Table.Cell positive>{ds.s_best}</Table.Cell>\r\n                  <Table.Cell >{ds.s_avg}</Table.Cell>\r\n                  <Table.Cell negative>{ds.s_worst}</Table.Cell>\r\n                </Table.Row>\r\n              );\r\n            })}\r\n          </Table.Body>\r\n        </Table>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default DataStructures","import React,{Component} from \"react\";\r\nimport { Container, Table} from 'semantic-ui-react';\r\nimport algorithms from \"../data/algorithms.json\";\r\n\r\nclass Algorithms extends Component{\r\n  render() {\r\n    return (\r\n      <>\r\n      <Container className=\"main\">\r\n        <Table celled selectable structured color='teal' key='teal'>\r\n        <Table.Header>\r\n            <Table.Row>\r\n                <Table.HeaderCell rowSpan='2'>Name</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='3'>Time Complexity</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='3'>Space Complexity</Table.HeaderCell>\r\n            </Table.Row>\r\n            <Table.Row>\r\n                <Table.HeaderCell>Best</Table.HeaderCell>\r\n                <Table.HeaderCell>Average</Table.HeaderCell>\r\n                <Table.HeaderCell>Worst</Table.HeaderCell>\r\n                <Table.HeaderCell>Best</Table.HeaderCell>\r\n                <Table.HeaderCell>Average</Table.HeaderCell>\r\n                <Table.HeaderCell>Worst</Table.HeaderCell>\r\n            </Table.Row>\r\n        </Table.Header>\r\n\r\n          <Table.Body>\r\n          {algorithms.map(algo => {\r\n              return (\r\n                <Table.Row key={algo.id}>\r\n                  <Table.Cell >{algo.name}</Table.Cell>\r\n                  <Table.Cell positive>{algo.t_best}</Table.Cell>\r\n                  <Table.Cell >{algo.t_avg}</Table.Cell>\r\n                  <Table.Cell negative>{algo.t_worst}</Table.Cell>\r\n                  <Table.Cell positive>{algo.s_best}</Table.Cell>\r\n                  <Table.Cell >{algo.s_avg}</Table.Cell>\r\n                  <Table.Cell negative>{algo.s_worst}</Table.Cell>\r\n                </Table.Row>\r\n              );\r\n            })}\r\n          </Table.Body>\r\n        </Table>\r\n      </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Algorithms","import React,{Component} from \"react\";\r\nimport {Container, Grid, Menu, Segment, Icon} from 'semantic-ui-react';\r\nimport {Route, BrowserRouter as Router,Link, Switch} from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport DataStructures from \"./DataStructures\";\r\nimport Algorithms from \"./Algorithms\";\r\n\r\nclass Index extends Component{\r\n    state = { activeItem: 'home' }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n  \r\n    render() {\r\n      const { activeItem } = this.state\r\n  \r\n      return (\r\n        <>\r\n            <div className=\"navBar\">\r\n                <p>Time \r\n                    <span className=\"space\"> Space</span> \r\n                    <span className=\"complexity\"> Complexity</span>\r\n                    <span className=\"repo\">\r\n                    <Icon color=\"brown\" name=\"github\"/><a href=\"https://github.com/mhhabib/TimeSpace-Complexity.git\" target='_blank' rel=\"noreferrer\">Repository</a>\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <Container className=\"main\">\r\n                <Router>\r\n                    <Grid>\r\n                        <Grid.Column width={4}>\r\n                            <Menu fluid vertical tabular>\r\n                            <Menu.Item\r\n                                name='home'\r\n                                active={activeItem === 'home'}\r\n                                onClick={this.handleItemClick}\r\n                                as={Link} to=\"/\"\r\n                            />\r\n                            <Menu.Item\r\n                                name='Data Structures'\r\n                                active={activeItem === 'Data Structures'}\r\n                                onClick={this.handleItemClick}\r\n                                as={Link} to=\"/ds\"\r\n                            />\r\n                            <Menu.Item\r\n                                name='Algorithms'\r\n                                active={activeItem === 'Algorithms'}\r\n                                onClick={this.handleItemClick}\r\n                                as={Link} to=\"/algo\"\r\n                            />\r\n                            <Menu.Item\r\n                                name='Feedback'\r\n                                active={activeItem === 'Feedback'}\r\n                                onClick={this.handleItemClick}\r\n                            />\r\n                            </Menu>\r\n                        </Grid.Column>\r\n                \r\n                        <Grid.Column stretched width={12}>\r\n                            <Segment>\r\n                                <Switch>\r\n                                    <Route path=\"/\" exact component={Home}/>\r\n                                    <Route path=\"/ds\" component={DataStructures}/>\r\n                                    <Route path=\"/algo\" component={Algorithms}/>\r\n                                </Switch>\r\n                            </Segment>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </Router>\r\n            </Container>\r\n            <footer className=\"footer\">\r\n                <p>Made with <Icon color=\"red\" name=\"like\"/>for the people who are going to be successful. [<a href=\"https://github.com/mhhabib\" target='_blank' rel=\"noreferrer\">mhhabib</a>]</p>\r\n            </footer>\r\n        </>\r\n      )\r\n    }\r\n}\r\nexport default Index","import './App.css';\nimport Index from './pages/Index';\n\nfunction App() {\n  return (\n    <div >\n      <Index/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}